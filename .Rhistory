library(rCharts)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1
p1$xAxis(axisLabel = 'Weight (in lb)')
p1
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
p1 <- rPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
n1
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup </p>")
map3$print("chart7")
names(iris) = gsub("\\.", "", names(iris))
r1 <- rPlot(SepalLength ~ SepalWidth | Species, data = iris,
color = 'Species', type = 'point')
r1$publish('Scatterplot', host = 'gist')
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
r1$print("chart1")
r1
hair_eye = as.data.frame(HairEyeColor)
p2 <- nPlot(Freq ~ Hair, group = 'Eye', data = subset(hair_eye, Sex == "Female"), type = 'multiBarChart')
p2$chart(color = c('brown', 'blue', '#594c26', 'green'))
p2
rPlot(mpg ~ wt, data = mtcars, type = 'point')
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1
require(reshape2)
library(rCharts)
uspexp <- melt(USPersonalExpenditure)
names(uspexp)[1:2] = c("category", "year")
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
x1
library(rCharts)
map <- Leaflet$new()
map$setView(c(51.505, -0.09), zoom = 13)
map$marker(
c(51.5, -0.09),
bindPopup = 'Hi. I am a popup'
)
map
library(rCharts)
titanic <- as.data.frame(Titanic)
dPlot(
Freq ~ Sex,
groups = "Survived",
data = titanic,
type = "bar"
)
dat <- data.frame(
t = rep(0:23, each = 4),
var = rep(LETTERS[1:4], 4),
val = round(runif(4*24,0,50))
)
p8 <- nPlot(val ~ t, group =  'var', data = dat,
type = 'stackedAreaChart', id = 'chart'
)
p8
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")  # prints out code
n1  # nothing happens
utils::browse(n1)
utils::browseUrl(n1)
utils::browseURL(n1)
launch.browser(n1)
shiny::runApp('shiny/angularshiny')
shiny::runApp('shiny/simplehtml')
library(opencpu)
opencpu$browse("/library/stocks/www")
opencpu$browse("/library/nabel/www")
install.packages("opencpu")
library(opencpu)
opencpu$browse("/library/stocks/www")
opencpu$browse("/library/nabel/www")
hist(cars$hist)
hist(cars$dist)
install.packages("rjson")
library("rjson")
json_file <- "http://api.openweathermap.org/data/2.5/weather?q=55317"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
json_data
json_data <- fromJSON(file=json_file)
json_data
json_data$clouds
json_data$clouds$all
json_data$weather
json_file <- "http://api.openweathermap.org/data/2.5/forecast?q=London,us"
json_data <- fromJSON(file=json_file)
json_data$list
json_data$list[[1]]
shiny::runApp('shiny/ddp-project')
?hist
?plot
shiny::runApp('shiny/ddp-project')
data()
data(trees)
trees
uspop
Nile
Orange
austres
cars
iris
precip
women
BJsales
volcano
shiny::runApp('shiny/ddp-project')
options(stringsAsFactors = "F")
crime = read.csv("http://vincentarelbundock.github.io/Rdatasets/csv/datasets/USArrests.csv")
options(stringsAsFactors = F)
crime = read.csv("http://vincentarelbundock.github.io/Rdatasets/csv/datasets/USArrests.csv")
crime
data()
uspop
women
data(package = .packages(all.available = TRUE))
AirPassengers
crime = read.csv("violent_crime.csv")
library(rmaps)
library(rMaps)
require(devtools)
install_github('ramnathv/rCharts@dev')
libraries()
library()
install_github('ramnathv/rMaps')
library(rMaps)
crosslet()
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
ichoropleth(Crime ~ State, data = subset(violent_crime, Year == 2010))
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year")
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year", play = TRUE)
map <- Leaflet$new()
map$setView(c(51.505, -0.09), zoom = 13)
map$tileLayer(provider = 'Stamen.Watercolor')
map$marker(
c(51.5, -0.09),
bindPopup = 'Hi. I am a popup'
)
map
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
))
library(rMaps)
runApp(list(
ui = pageWithSidebar(
headerPanel("Shiny, rCharts and DataMaps"),
sidebarPanel(
selectInput("pal", 'Select Palette', c('Blues', 'PuRd')),
numericInput("ncuts", 'Select Number of Breaks', value = 5, min = 4, max = 9)
),
mainPanel(
rCharts::chartOutput('myplot', 'datamaps')
)
),
server = function(input, output, session){
output$myplot = rCharts::renderChart2({ichoropleth(
Crime ~ State,
data = subset(violent_crime, Year == 2010),
pal = input$pal,
ncuts = input$ncuts
)})
}
))
shiny::runApp('shiny/ddp-project')
display.brewer.all()
require(RColorBrewer)
display.brewer.all()
shiny::runApp('shiny/ddp-project')
violent_crime
violent_crime(head)
head(violent_crime)
shiny::runApp('shiny/ddp-project')
setwd("c:/dev/data/shiny/ddp-project/presentation")
publish(user = "tantrip", repo = "https://github.com/tantrip/ddp-project-slidify.git")
library(slidify)
publish(user = "tantrip", repo = "https://github.com/tantrip/ddp-project-slidify.git")
publish(user = "tantrip", repo = "ddp-project-slidify.git")
publish(user = "tantrip", repo = "https://github.com/tantrip/ddp-project-slidify.git")
library(slidify)
git config --global user.email "tantrip@tantrip.com"
publish(user = "tantrip", repo = "ddp-project-slidify.git")
getwd()
slidify('index.Rmd')
